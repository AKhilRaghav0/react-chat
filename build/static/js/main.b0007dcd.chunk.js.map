{"version":3,"sources":["events.js","components/LoginForm.js","components/chats/Messages.js","components/chats/Sidebar.js","components/chats/ChatContainer.js","config.js","components/Layout.js","App.js","index.js"],"names":["module","exports","VERIFY_USER","LOGIN","USER_JOINED","ADD_USER","NEW_MESSAGE","TYPING","STOP_TYPING","USER_LEFT","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","_this$state","state","socket","username","emit","setUsername","_ref","isUser","setError","error","setState","_this2","_this$state2","disabled","react_default","a","createElement","className","onSubmit","htmlFor","id","value","onChange","target","type","autoComplete","maxLength","Component","Messages","getTime","date","Date","now","concat","getHours","getMinutes","slice","scrollDown","bind","assertThisInitialized","messages","refs","scrollTop","scrollHeight","prevProps","prevState","_","map","typingUsers","user","key","chats","myUsername","length","chat","index","msgAlign","message","_this$props","ref","renderChat","renderTypingUsers","colors","SideBar","i","userName","style","background","charAt","lineHeight","fontSize","users","_renderUser","ChatContainer","addChatMessage","addChatTyping","data","assign","removeChatTyping","typing","stopTyping","clearInterval","setTimeout","on","textAlign","href","rel","Sidebar","width","chats_Messages","placeholder","index_esm","SERVER_URL","process","REACT_APP_ENV","Layout","initSocket","io","reconnet","chats_ChatContainer","components_LoginForm","App","components_Layout","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b0007dcd.chunk.js","sourcesContent":["module.exports = {\n  VERIFY_USER:'VERIFY_USER',\n  LOGIN: 'LOGIN',\n  USER_JOINED: 'USER_JOINED',\n  ADD_USER:'ADD_USER',\n  NEW_MESSAGE:'NEW_MESSAGE',\n  TYPING:'TYPING',\n  STOP_TYPING:'STOP_TYPING',\n  USER_LEFT:'USER_LEFT'\n}\n","import React, { Component } from 'react';\nimport { VERIFY_USER, ADD_USER } from '../events';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      error: null,\n      socket: null\n    };\n  }\n\n  componentWillMount(){\n    const {socket} = this.props\n    this.setState({socket});\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { socket, username } = this.state\n    if(username){\n      // Tell the server your username\n      socket.emit(VERIFY_USER, username, this.setUsername);\n    }\n  }\n\n  setUsername = ({username, isUser}) => {\n    const {setUsername} = this.props\n    const {socket} = this.state;\n    if(isUser){\n      this.setError(\"Username taken\")\n    }else{\n      this.setError(null)\n      socket.emit(ADD_USER, username);\n      setUsername(username)\n    }\n  }\n\n  setError = error => {\n    this.setState({error})\n  }\n\n  render() {\n    const {username, error} = this.state\n    const disabled = username ? false : true\n    return (\n      <form className=\"login\" onSubmit={this.handleSubmit}>\n        <div className=\"login-form\">\n          <label htmlFor=\"username\"><h2>What's your username?</h2></label>\n          <input id=\"username\"\n            value={username}\n            onChange={e => {this.setState({username:e.target.value})}}\n            type=\"text\"\n            autoComplete=\"off\"\n            maxLength=\"14\" />\n          <button type=\"submit\" className=\"form-btn\" disabled={disabled}>GO</button>\n          <div className=\"error\">{error ? error : null}</div>\n\n        </div>\n      </form>\n    );\n  }\n\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollDown = this.scrollDown.bind(this)\n  }\n\n  scrollDown(){\n    const { messages } = this.refs\n    messages.scrollTop = messages.scrollHeight\n  }\n\n  componentDidMount() {\n    this.scrollDown()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.scrollDown()\n  }\n\n  getTime = () => {\n    const date = new Date(Date.now())\n    return `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\n  }\n\n\n  renderTypingUsers(){\n      // We cannot interate through object using es6 map function like we do in array\n      // Instead here we use lodash map function\n      return _.map(this.props.typingUsers, user => {\n        return (\n          <li className=\"user-typing text-muted\" key={user}>\n            <i>{`${user} is typing...`}</i>\n          </li>\n        );\n      });\n  }\n\n  renderChat(chats, myUsername){\n    if(chats.length > 0){\n      return chats.map((chat, index) => {\n        const msgAlign = chat.username === myUsername ? 'right' : ''\n        return (\n          <li key={index} className={msgAlign}>\n            <div>\n              <div className={`m-box d-flex ${msgAlign}`}>\n                <span className=\"m\">{chat.message}</span>\n                <small>{this.getTime()}</small>\n              </div>\n              {chat.username !== myUsername && <span className=\"text-muted sender\">{chat.username}</span>}\n            </div>\n          </li>\n        )\n      })\n    }else{\n      return <li className=\"no-msg text-muted\">Send a message to start a conversation.</li>\n    }\n  }\n\n  render() {\n    const {chats, myUsername} = this.props\n    return (\n      <ul ref=\"messages\" className=\"messages neutralize\">\n        {\n          this.renderChat(chats, myUsername)\n        }\n        {\n          this.renderTypingUsers()\n        }\n      </ul>\n    );\n  }\n\n}\n\nexport default Messages;\n","import React, { Component } from 'react';\n\nconst colors = ['#00BCD4','#FFB300','#E91E63', '#8BC34A', '#00cfb6', '#795548']\n\n\n\nclass SideBar extends Component {\n  _renderUser(user,myUsername, index){\n    /*\n    input   0 1 2 3 4 5 6 7 8 9 10 11 12\n    output  0 1 2 3 4 5 0 1 2 3  4  5  0\n    */\n    const i = index%colors.length;\n\n    const userName = user === myUsername ? user+' (You)' : user\n\n    return (\n      <div className=\"d-flex\">\n        <div className=\"u-pp\" style={{background:colors[i]}}>\n          {user.charAt(0)}\n        </div>\n        <span style={{lineHeight:40+'px',fontSize: 13+'px'}}>{userName}</span>\n      </div>\n    )\n  }\n  render() {\n    const {users, myUsername} = this.props\n    return (\n      <div>\n        <h2>People ({users.length})</h2>\n        <ul className=\"user-list neutralize\">\n          {\n            users.map((user, index) => (\n              <li key={index}>\n                {this._renderUser(user,myUsername, index)}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport Messages from \"./Messages\";\nimport Sidebar from \"./Sidebar\";\nimport { FaRegPaperPlane } from \"react-icons/fa\";\nimport {\n  LOGIN,\n  USER_JOINED,\n  NEW_MESSAGE,\n  TYPING,\n  STOP_TYPING,\n  USER_LEFT\n} from \"../../events\";\n\nclass ChatContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      socket: null,\n      message: \"\",\n      typing: false,\n      chats: [],\n      users: [],\n      typingUsers: {}\n    };\n  }\n\n  componentWillMount() {\n    const { socket } = this.props;\n    // socket.emit('add user', 'manjil');\n\n    // Whenever the server emits 'login', log the login message\n    socket.on(LOGIN, data => {\n      this.setState({ users: data.users });\n      // console.log(\"On login\", data);\n    });\n\n    // Whenever the server emits 'user joined', log it in the chat body\n    socket.on(USER_JOINED, data => {\n      this.setState({ users: data.users });\n      // console.log(\"User joined\", data);\n    });\n\n    // Whenever the server emits 'new message', update the chat body\n    socket.on(NEW_MESSAGE, data => {\n      this.addChatMessage(data);\n    });\n\n    // Whenever the server emits 'typing', show the typing message\n    socket.on(TYPING, data => {\n      this.addChatTyping(data);\n    });\n\n    // Whenever the server emits 'stop typing', kill the typing message\n    socket.on(STOP_TYPING, data => {\n      this.removeChatTyping(data);\n    });\n\n    // Whenever the server emits 'user left', log it in the chat body\n    socket.on(USER_LEFT, data => {\n      this.setState({ users: data.users });\n      // console.log(data.username + ' left');\n      this.removeChatTyping(data);\n    });\n\n    this.setState({ socket });\n  }\n\n  addChatMessage = ({ username, message }) => {\n    const chat = { username, message };\n    this.setState({ chats: this.state.chats.concat(chat) });\n  };\n\n  addChatTyping = data => {\n    const { username } = data;\n    const typingUsers = Object.assign({}, this.state.typingUsers);\n    typingUsers[username] = username;\n    this.setState({ typingUsers });\n  };\n\n  removeChatTyping = data => {\n    let typingUsers = Object.assign({}, this.state.typingUsers);\n    delete typingUsers[data.username];\n    this.setState({ typingUsers });\n  };\n\n  // Sends a chat message\n  handleSubmit = e => {\n    e.preventDefault();\n    const { message } = this.state;\n    const { username } = this.props;\n    // if there is a non-empty message and a socket connection\n    if (message) {\n      this.addChatMessage({\n        username: username,\n        message: message\n      });\n\n      // tell server to execute 'new message' and send along one parameter\n      this.state.socket.emit(NEW_MESSAGE, message);\n    }\n    this.setState({ message: \"\" });\n  };\n\n  onChange = e => {\n    if (!this.state.typing) {\n      this.setState({ typing: true });\n      this.state.socket.emit(TYPING);\n    }\n\n    if (this.stopTyping) clearInterval(this.stopTyping);\n\n    this.stopTyping = setTimeout(() => {\n      if (this.state.typing) {\n        this.state.socket.emit(STOP_TYPING);\n        this.setState({ typing: false });\n      }\n    }, 400);\n\n    this.setState({ message: e.target.value });\n  };\n\n  render() {\n    const { message, users, typingUsers } = this.state;\n    const { username } = this.props;\n\n    const disabled = this.state.message ? false : true;\n    return (\n      <div className=\"fw\">\n        {\n          <div id=\"header\">\n            <p style={{ textAlign: \"right\" }}>\n              <a\n                href=\"https://www.vortexnepal.com/manjiltamang/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"caption\"\n              >\n                By Manjil Tamang\n              </a>\n            </p>\n          </div>\n        }\n        <div className=\"d-flex main-wrapper\">\n          <div id=\"sidebar\">\n            <Sidebar users={users} myUsername={username} />\n          </div>\n          <div style={{ width: 15 + \"px\" }} className=\"spacer\"></div>\n          <div id=\"chatbox\" className=\"d-flex\">\n            <Messages\n              typingUsers={typingUsers}\n              chats={this.state.chats}\n              myUsername={username}\n            />\n            <form className=\"d-flex\" onSubmit={this.handleSubmit}>\n              <input\n                value={message}\n                onChange={this.onChange}\n                placeholder=\"Type a message here...\"\n              />\n              <button type=\"submit\" disabled={disabled}>\n                <FaRegPaperPlane />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatContainer;\n","let SERVER_URL = \"/\";\n\nif (process.env.REACT_APP_ENV === \"DEV\") {\n  SERVER_URL = \"http://localhost:5000\";\n}\nexport { SERVER_URL };\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport LoginForm from \"./LoginForm\";\nimport ChatContainer from \"./chats/ChatContainer\";\nimport { SERVER_URL } from \"../config\";\nimport { VERIFY_USER, ADD_USER } from \"../events\";\n\nclass Layout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      socket: null\n    };\n  }\n\n  componentWillMount() {\n    this.initSocket();\n  }\n\n  /*\n   * Connect to and initialize the socket.\n   */\n  initSocket = () => {\n    const socket = io(SERVER_URL);\n    socket.on(\"connect\", () => {\n      if (this.state.username) {\n        socket.emit(VERIFY_USER, this.state.username, this.reconnet);\n      }\n    });\n    this.setState({ socket });\n  };\n\n  /*\n   * To reconnect user if connection is lost\n   */\n  reconnet = ({ username, isUser }) => {\n    const { socket } = this.state;\n    if (isUser) {\n      this.setState({ username: \"\" });\n    } else {\n      socket.emit(ADD_USER, username);\n    }\n  };\n\n  setUsername = username => {\n    this.setState({ username });\n  };\n\n  render() {\n    const { socket, username } = this.state;\n    return (\n      <div className=\"mjl-container\">\n        {!username ? (\n          <LoginForm setUsername={this.setUsername} socket={socket} />\n        ) : (\n          <ChatContainer username={username} socket={socket} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}